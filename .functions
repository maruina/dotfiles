gi() {
    curl -L -s "https://www.gitignore.io/api/$@"
}

git-update-fork() {
    git fetch upstream && git checkout master && git merge upstream/master
}

git-set-upstream() {
    if [[ "$#" -eq 1 ]]; then
        git remote add upstream "$1"
    else
        echo "Usage: git-set-upstream https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git"
    fi
}

python3-env() {
    python3 -m venv .env
}

kap() {
    docker run -t --rm -v "$(pwd):/src:delegated" deepmind/kapitan:v0.29.5 "$@"
}

docker-rm-stopped() {
    docker rm "$(docker ps -a -q)"
}

docker-rm-images() {
    docker rmi "$(docker images -a -q)"
}

aws-get-latest-al2() {
    if [[ "$#" -eq 1 ]]; then
        local regions=($1)
    else
        local regions=(eu-west-1 eu-central-1 ap-southeast-1 ap-northeast-1)
    fi

    for r in $regions; do
        ami=$(aws ec2 describe-images --owners amazon --filters 'Name=name,Values=amzn2-ami-hvm-2.0.????????.?-x86_64-gp2' 'Name=state,Values=available' --query 'reverse(sort_by(Images, &CreationDate))[:1].ImageId' --output text --region $r)
        echo "Region: $r\nAMI: $ami"
    done
}

p10k-update() {
    git -C $ZSH_CUSTOM/themes/powerlevel10k pull
}

qc35-reset() {
    sudo launchctl stop com.apple.blued
    sleep 5
    sudo launchctl start com.apple.blued
    sudo kill -9 `ps ax|grep 'coreaudio[a-z]' | awk '{print $1}'`
}

kind-ecr-registry() {

    if [[ "$#" -ne 2 ]]; then
        echo "Insufficient arguments, got $*"
        echo "Usage: kind-ecr-registry <ACCOUNT> <REGION>"
        echo "Example: kind-ecr-registry 426038483100 eu-west-1"
        return 1
    fi

    local current_context=$(kubectl config current-context)
    local account=$1
    local region=$2
    local secret_name=${region}-ecr-registry
    local email=foo@example.com

    if [[ "kind-kind" == "${current_context}" ]]; then
        local token=$(aws ecr --region="${region}" get-authorization-token --output json | jq -r '.authorizationData[].authorizationToken' | base64 -d | cut -d: -f2)
        kubectl delete secret --ignore-not-found "${secret_name}"
        kubectl create secret docker-registry "${secret_name}" \
            --docker-server="https://${account}.dkr.ecr.${region}.amazonaws.com"\
            --docker-username=AWS \
            --docker-password="${token}" \
            --docker-email="${email}"
        echo "Secret ${secret_name} created for cluster ${current_context}"
    else
        echo "Not using a kind cluster"
        return 1
    fi
}

pman() {
    man -t "$@" | open -f -a Preview
}
